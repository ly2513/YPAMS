<?php
/**
 * User: yongli
 * Date: 17/5/9
 * Time: 13:46
 * Email: yong.li@szypwl.com
 * Copyright: 深圳优品未来科技有限公司
 */
namespace App\Controllers\Admin;

use Admin\MenuModel;
use Admin\RoleModel;
use Config\Services;
use \YP\Core\YP_Controller as Controller;

/**
 * Class Auth 权限认证类
 * @package App\Controllers\Admin
 */
class Auth extends Controller
{
    /**
     * 每页显示多少条
     *
     * @var int
     */
    public $perPage = 10;

    /**
     * 当前页码
     *
     * @var int
     */
    public $page = 1;

    /**
     * 用户信息
     */
    protected $userInfo;

    /**
     * 账号ID
     *
     * @var int
     */
    protected $uid = 1;

    /**
     * 构造函数
     */
    public function initialization()
    {
        parent::initialization(); // TODO: Change the autogenerated stub
        $this->page    = $this->request->getGet('per_page') ? $this->request->getGet('per_page') : $this->page;
        $this->perPage = $this->request->getGet('perPage') ? $this->request->getGet('perPage') : $this->perPage;
        // 检测是否登陆
        $this->checkLogin();
        // 分配权限菜单
        $this->_showMenu();
        $session        = Services::session();
        $this->userInfo = $session->get('userInfo');
        $this->assign('c', $this->controller);
        $this->assign('a', $this->method);
    }

    /**
     * 检测是否登录
     */
    public function checkLogin()
    {
        if (!isset($_SESSION['userInfo'])) {
            $isAjax = $_SERVER['HTTP_X_REQUESTED_WITH'] ?? false;
            if ($isAjax) {
                echo 'logintimeout';
                exit;
            } else {
                $url = 'http://' . $_SERVER['HTTP_HOST'];
                $msg = urlencode('请重新登录');
                header("Location: $url/Admin/Login/login?msg=" . $msg);
                exit;
            }
        }
        $this->uid = $_SESSION['userInfo']['uid'];
    }

    /**
     * Paginate
     *
     * @param integer $row
     * @param string  $url
     * @param integer $uri_segment
     * @param integer $per_page
     *
     * @return array
     */
    public function setPageConfig($row, $url, $uri_segment, $per_page)
    {
        $config['base_url']          = $url;
        $config['total_rows']        = $row;
        $config['per_page']          = $per_page;//每页显示多少条
        $config['uri_segment']       = $uri_segment;
        $config['num_links']         = 2;//数量链接
        $config['page_query_string'] = true;
        $config['full_tag_open']     = '<ul class="pagination"><span class="ant-pagination-total-text"><span>共 <span class="">' . $row . '</span> 条</span></span> ';
        $config['full_tag_close']    = '<select class="select-change" name="perNum"><option value="10">10 条/页</option><option value="30">30 条/页</option><option value="50">50 条/页</option></select><span class="quick-jumper">跳至 <input name="per_page" type="text" value=""></span> 页</ul>';
        $config['first_link']        = '首页';
        $config['first_tag_open']    = '<li class="pre">';
        $config['first_tag_close']   = '</li>';
        $config['last_link']         = '最后一页';
        $config['last_tag_open']     = '<li>';
        $config['last_tag_close']    = '</li>';
        $config['next_link']         = '>';
        $config['next_tag_open']     = '<li class="next">';//下一页
        $config['next_tag_close']    = '</li>';
        $config['prev_link']         = '<';
        $config['prev_tag_open']     = '<li>';
        $config['prev_tag_close']    = '</li>';
        $config['cur_tag_open']      = '<li class="active"><a>';//当前页
        $config['cur_tag_close']     = '</a></li>';
        $config['num_tag_open']      = '<li class="num">';
        $config['num_tag_close']     = '</li>';
        $config['use_page_numbers']  = true;
        return $config;
    }

    private function _showMenu()
    {
        // 实例化session对象
        $session  = Services::session();
        $userInfo = $session->get('userInfo');
        $rids     = isset($userInfo['rid']) ? $userInfo['rid'] : [];
        if (!$rids) {
            call_back(2, '', '请给账号分配角色！');
        }
        $result = RoleModel::select(['id', 'permissions'])->whereIn('id', $rids)->get()->toArray();
        $result = $result ? $result : [];
        if (!$result) {
            callBack(2, '', '该记录不存在!');
        }
        $permissionArr = [];
        foreach ($result as $key => $value) {
            $menus = json_decode($value['permissions'], true);
            foreach ($menus as $k => $v){
                array_push($permissionArr, $v);
            }
        }
        $permissionArr = $permissionArr ? array_unique($permissionArr) : [];
        if (!is_array($permissionArr) && !empty($permissionArr)) {//传入角色的权限ids
            $permissionArr = [$permissionArr];
        }
        // 获得系统所有的菜单
        $sysMenus = MenuModel::select([
            'id',
            'pid',
            'icon',
            'name',
            'level',
            'url',
            'description',
            'sort',
            'type'
        ])->get()->toArray();
        foreach ($sysMenus as $key => $value) {//添加type 值 与checked值
            if (in_array($value['id'], $permissionArr)) {
                $checked = 1;
            } else {
                $checked = 0;
            }
            $sysMenus[$key]['checked'] = $checked;
        }
        unset($result['permissions']);
        $result['data'] = MenuModel::serializeMapList($sysMenus, 0);
        $this->assign('menuList', $result['data']);
    }

}
