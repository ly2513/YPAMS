<?php
/**
 * User: xuehe.yang
 * Date: 17/9/2
 * Time: 14:00
 * Email: xuehe.yang@szypwl.com
 * Copyright: 深圳优品未来科技有限公司.
 */
namespace App\Controllers\Admin;

use Illuminate\Database\Capsule\Manager as DB;

/**
 * 统计数据控制器
 * Class Index.
 *
 * @notice  fun命名规则
 * 主页+index
 * 在主页下触发展示页的+view
 * 对数据有增删改的+action
 * ajax请求+ajax
 */
class Index extends Auth
{
    /**
     * redis 对象
     *
     * @var null
     */
    public $redis = null;

    /**
     * 构造方法.
     */
    public function initialization()
    {
        parent::initialization(); // TODO: Change the autogenerated stub
        $this->redis = \Config\Services::redis();
        // 初始化redis
        if (!$this->redis->getRedis()) {
            $this->redis->initialize();
        }
    }

    public function index()
    {
        
        $this->display();

    }

    /**
     * 数据统计主页.
     *
     * @author YXH <xuehe.yang@szypwl.com>
     * @date   2017-08-24
     */
    public function statisticsIndex()
    {
        $categoryData = array_values($this->_sujinClassArr);
        $stockData = $item = $monthCount = [];
        foreach ($this->_sujinClassArr as $k => $v) {
            $item        = [
                'number' => $this->_getClassStock($k),
                'name'   => $v,
                'kgold'  => $this->_getClassStock($k, 3),
                'ptgold' => $this->_getClassStock($k, 4),
                'gold'   => $this->_getClassStock($k, 2),
            ];
            $stockData[] = $item;
        }
        $m = intval(date('m'));
        for ($i = 1; $i <= $m; ++$i) {
            $node         = [
                'month' => $i . '月',
                'cost'  => mt_rand(100, 300), // 没数据 随机的
                'sales' => mt_rand(50, 150),
            ];
            $monthCount[] = $node;
        }
        $this->assign('categoryData', $categoryData);
        $this->assign('stockData', $stockData);
        $this->assign('monthCount', $monthCount);
        $this->display();
        exit;
    }

    /**
     * 获取统计分类库存数据.
     *
     * @param classId 分类id 耳饰 项链
     * @param cateId  品类id 黄金 K金
     *
     * @return mixed
     *
     * @author YXH <xuehe.yang@szypwl.com>
     * @date   2017/09/05
     */
    private function _getClassStock($classId, $cateId = null)
    {
        $query = DB::table('zb_retail_goods_all')->where('is_delete', 0)->where('class_id', $classId)->where('type',
                1)->where('business_id', $this->business_id);
        if ($cateId) {
            $query->where('cate_id', $cateId);
        }
        $count = $query->count();
        return $count;
    }

    // 表芯类型
    private $_mechanismTypeList = [
        1 => '自动机械',
        2 => '手动机械',
        3 => '石英',
        4 => '电子',
    ];

    // 机芯品质
    private $_mechanismQualityList = [
        1 => '进口瑞士机芯',
        2 => '进口日本机芯',
        3 => '国产机芯',
    ];

    // 表壳材质
    private $_caseMaterialList = [
        1 => '足金',
        2 => 'K金',
        3 => '合金',
        4 => '精钢',
        5 => '钨钢',
        6 => '陶瓷',
        7 => '玉石',
        8 => '花梨木',
    ];

    // 表壳颜色
    private $_caseColorList = [
        1 => '玫瑰金',
        2 => '白色',
        3 => '黄色',
    ];

    // 镜面材质
    private $_mirrorMaterialList = [
        1 => '蓝宝石镜面',
        2 => '玻璃镜面',
        3 => '橡胶镜面',
        4 => '矿石水晶镜面',
    ];

    // 表扣材质
    private $_buttonMaterialList = [
        1 => 'K金',
        2 => '合金',
        3 => '精钢',
    ];

    // 表扣款式
    private $_buttonStyleList = [
        1 => '蝴蝶扣',
        2 => '折叠扣',
        3 => '安全扣',
        4 => '暗扣',
        5 => '针扣',
        6 => '钩扣',
    ];

    // 表带材质
    private $_bandMaterialList = [
        1 => '皮革-鳄鱼皮',
        2 => '皮革-牛皮',
        3 => '精钢',
    ];

    // 镶嵌
    private $_inlayList = [
        0 => '无',
        1 => '钻石',
        2 => '蓝宝石',
        3 => '红宝石',
        4 => '绿宝石',
    ];

    // 素金分类
    private $_sujinClassArr = [
        1 => '耳饰',
        2 => '项链',
        3 => '套链',
        4 => '吊坠',
        5 => '手镯',
        6 => '戒指',
        7 => '手(脚)链',
    ];
}
